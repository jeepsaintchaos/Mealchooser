import random as r
import configparser
import os
import webbrowser



def makeconfig():
    config=configparser.ConfigParser()
    con='config.ini'
    with open(con, 'w') as f:
        config.add_section('section_a')
        config.add_section('section_b')
        config.add_section('section_c')
        config.set('section_a', 'a1', 'Mcdonalds')
        config.set('section_a', 'a2', 'Pizza Hut')
        config.set('section_a', 'a3', 'Mcdonalds')
        config.set('section_a', 'a4', 'Burger King')
        config.set('section_a', 'a5', 'Taco Bell')
        config.set('section_a', 'a6', 'Arbys')
        config.set('section_a', 'a7', 'QuikTrip')
        config.set('section_a', 'a8', 'Dairy Queen')
        config.set('section_a', 'a9', 'Freddys')
        config.set('section_a', 'a10', 'Sonic')
        config.set('section_a', 'a11', 'Wendys')
        config.set('section_a', 'a12', 'Chipotle')
        config.set('section_a', 'a13', 'Kentucky Fried Chicken')
        config.set('section_a', 'a14', 'Popeyes')
        config.set('section_a', 'a15', 'Churchs Chicken')
        config.set('section_a', 'a16', 'Jimmy Johns')
        config.set('section_a', 'a17', 'Dunkin Donuts')
        config.set('section_a', 'a18', 'Jack in the Box')
        config.set('section_a', 'a19', 'Dominos Pizza')
        config.set('section_a', 'a20', 'Lutfis Fried Fish')
        config.set('section_a', 'a21', 'Big Boy Burgers')
        config.set('section_a', 'a22', 'A&W Restaraunt')
        config.set('section_a', 'a23', 'Hi-Boy Drive-in')
        config.set('section_a', 'a24', 'Five Guys')
        config.set('section_a', 'a25', 'Mugs-Up')
        config.set('section_a', 'a26', 'Pauls Drive-in')
        config.set('section_a', 'a27', 'Long John Silvers')
        config.set('section_a', 'a28', 'Chick-fil-A')
        config.set('section_a', 'a29', 'Hardees')
        config.set('section_a', 'a30', 'Sarpinos Pizza')
        config.set('section_a', 'a0', 'Little Caesars Pizza')
        config.set('section_b', 'b0', 'Las Chilis Mexican Restaraunt')
        config.set('section_b', 'b1', 'Ihop')
        config.set('section_b', 'b3', 'El Magueys')
        config.set('section_b', 'b4', 'Applebees')
        config.set('section_b', 'b5', 'Pepperjax Grill')
        config.set('section_b', 'b6', 'Los Compas Mexican Restaraunt')
        config.set('section_b', 'b7', 'Dennys')
        config.set('section_b', 'b8', 'Waffle House')
        config.set('section_b', 'b9', 'Mediterranean Grill')
        config.set('section_b', 'b10', 'Olive Garden')
        config.set('section_b', 'b11', 'Rosies Cafe')
        config.set('section_b', 'b12', 'Three Pigs Barbeque')
        config.set('section_b', 'b13', 'The Soul Shack KC')
        config.set('section_b', 'b14', 'Firebirds Wood Fired Grill')
        config.set('section_b', 'b15', 'Hawaiian Bros Island Grill')
        config.set('section_b', 'b16', 'Jack Stack BBQ')
        config.set('section_b', 'b17', 'Queen Taco')
        config.set('section_b', 'b18', 'Red Lobster')
        config.set('section_b', 'b19', 'Backyard Burgers')
        config.set('section_b', 'b20', 'Houlihans')
        config.set('section_b', 'b21', 'Perkins')
        config.set('section_b', 'b22', 'Cheddars Scratch Kitchen')
        config.set('section_b', 'b23', 'Old Chicago Pizza')
        config.set('section_b', 'b24', 'Pizza Ranch')
        config.set('section_b', 'b25', 'Gates BBQ')
        config.set('section_b', 'b26', 'JJs Restaurant')
        config.set('section_b', 'b27', 'In-A-Tub')
        config.set('section_b', 'b28', 'Lakewood Local')
        config.set('section_b', 'b29', 'On The Border Mexican Grill')
        config.set('section_b', 'b30', 'Charlestons Restaraunt')
        config.set('section_b', 'b31', 'A Little BBQ Joint')
        config.set('section_b', 'b32', 'Pie Five Pizza')
        config.set('section_b', 'b33', 'Mama Chinas')
        config.set('section_b', 'b34', 'Black Bear Diner')
        config.set('section_b', 'b35', 'King Wok')
        config.set('section_b', 'b36', 'Red Door Woodfired Grill')
        config.set('section_b', 'b37', 'Salty Iguana')
        config.set('section_b', 'b38', 'Siki Japanese Steak House and Sushi Bar')
        config.set('section_b', 'b39', 'Finger Foodz')
        config.set('section_b', 'b40', 'Jess and Jims Steak House')
        config.set('section_b', 'b41', 'Slim Chickens')
        config.set('section_b', 'b42', 'Brio Italian Grill')
        config.set('section_b', 'b43', 'SPIN! Pizza')
        config.set('section_b', 'b44', 'Fritzs at Crown Center')
        config.set('section_b', 'b45', 'Chilis Bar and Grill')
        config.set('section_b', 'b46', 'The Corner Mexican Food')
        config.set('section_b', 'b47', 'Youngs Chinese Restaraut')
        config.set('section_b', 'b48', 'Bella Napoli')
        config.set('section_b', 'b49', 'Chuys')
        config.set('section_b', 'b50', 'Mint Sushi')
        config.set('section_b', 'b51', 'Tacos El Gallo')
        config.set('section_b', 'b52', 'Sweet Siam Thai')
        config.set('section_b', 'b53', 'Minskys Pizza')
        config.set('section_b', 'b54', 'Jose Peppers Mexican Restaraunt')
        config.set('section_b', 'b55', 'Taco Republic Corinth Square')
        config.set('section_b', 'b56', 'Summit Grill')
        config.set('section_b', 'b57', 'Blue Moose')
        config.set('section_b', 'b58', 'Godfathers Pizza')
        config.set('section_b', 'b59', 'India Palace')
        config.set('section_b', 'b60', 'NIJI Sushi and Steak')
        config.set('section_b', 'b61', '54th Street Bar and Grill')
        config.set('section_c', 'c0', 'Steak and Mashed Potatoes')
        config.set('section_c', 'c1', 'Macaroni and Cheese with Hotdogs')
        config.set('section_c', 'c2', 'Salisbury Steaks')
        config.set('section_c', 'c3', 'Cook the neighbors cat')
        config.set('section_c', 'c4', 'Go to the store and get a frozen pizza!')
        config.set('section_c', 'c5', 'You deserve to be lazy. Restart this app and pick "eat out" instead!')
        config.set('section_c', 'c6', 'Chicken Alfredo')
        config.set('section_c', 'c7', 'Shrimp Alfredo')
        config.set('section_c', 'c8', 'Chili')
        config.set('section_c', 'c9', 'Chicken Bacon Ranch Casserole')
        config.set('section_c', 'c10', 'Angel Hair Pasta')
        config.set('section_c', 'c11', 'Chicken Parmesan')
        config.set('section_c', 'c12', 'Chicken and Corn Chowder')
        config.set('section_c', 'c13', 'Tamale Pie')
        config.set('section_c', 'c14', 'Cheeseburger Salad')
        config.set('section_c', 'c15', 'Chicken Primavera')
        config.set('section_c', 'c16', 'Shrimp Scampi')
        config.set('section_c', 'c17', 'Grilled Mahi-Mahi')
        config.set('section_c', 'c18', 'Shish Kebabs')
        config.set('section_c', 'c19', 'Stuffed Pepper Soup')
        config.set('section_c', 'c20', 'Chicken Saltimbocca')
        config.set('section_c', 'c21', 'Ginger Meatballs with Sesame Broccoli')
        config.set('section_c', 'c22', 'Stuffed Zucchini')
        config.set('section_c', 'c23', 'Huevos Rancheros')
        config.set('section_c', 'c24', 'Shrimp Pesto Pasta')
        config.set('section_c', 'c25', 'Chicken Marsala')
        config.set('section_c', 'c26', 'Stuffed Cabbage')
        config.set('section_c', 'c27', 'Sloppy Joe Casserole')
        config.set('section_c', 'c28', 'Lentil Soup')
        config.set('section_c', 'c29', 'Sheet Pan Salmon Puttanesca')
        config.set('section_c', 'c30', 'Cheeseburgers')
        config.set('section_c', 'c31', 'Stuffed Acorn Squash')
        config.set('section_c', 'c32', 'Cowboy Casserole')
        config.set('section_c', 'c33', 'Pork Chops')
        config.set('section_c', 'c34', 'Tacos')
        config.set('section_c', 'c35', 'Chicken Tacos')
        config.set('section_c', 'c36', 'Taco Salad')
        config.set('section_c', 'c37', 'Homemade Pizza')
        config.set('section_c', 'c38', 'Instant Pot Ribs with Dr.Pepper BBQ Sauce')
        config.set('section_c', 'c39', 'Salmon Burgers with Sesame-Soy Glaze')
        config.set('section_c', 'c40', 'Skillet Lasagna')
        config.set('section_c', 'c41', 'BBQ Meatball Subs')
        config.set('section_c', 'c42', 'Baked Spinach Ravioli with Pesto Cream Sauce')
        config.set('section_c', 'c43', 'Honey Soy Salmon')
        config.set('section_c', 'c44', 'Veggie Stir-Fry')
        config.set('section_c', 'c45', 'Pork Marsala with Mushrooms')
        config.set('section_c', 'c46', 'Pretzel-Crusted Chicken with Broccoli')
        config.set('section_c', 'c47', 'Lemon-Thyme Sheet-Pan Chicken and Potatoes')
        config.set('section_c', 'c48', 'Steakhouse Mashed Potato Bowls')
        config.set('section_c', 'c49', 'Chicken Tortilla Soup')
        config.set('section_c', 'c50', 'Cocunut Curry Shrimp with Potatoes')
        config.set('section_c', 'c51', 'Beef Taco Skillet')
        config.set('section_c', 'c52', 'Shepards Pie')
        config.set('section_c', 'c53', 'Cashew Chicken')
        config.set('section_c', 'c54', 'Lemon-Garlic Shrimp and Grits')
        config.set('section_c', 'c55', 'Broccoli Cheese Soup')
        config.set('section_c', 'c56', 'Turkey Chili')
        config.set('section_c', 'c57', 'Crispy Chicken Florintine Melt')
        config.set('section_c', 'c58', 'Grilled Chicken and Strawberry Salad Wrap')
        config.set('section_c', 'c59', 'Beef Stroganoff')
        config.set('section_c', 'c60', 'French Dip Sandwiches')
        config.set('section_c', 'c61', 'Chicken Strips with macaroni and cheese')
        config.set('section_c', 'c62', 'Creamy Spinach and Red Pepper Chicken')
        config.set('section_c', 'c63', 'Cold Cuts')
        config.set('section_c', 'c64', 'Spaghetti and Meatballs')
        config.set('section_c', 'c65', 'Catfish with Macaroni on the side')
        config.set('section_c', 'c66', 'Thai inspired Salmon Salad')
        config.set('section_c', 'c67', 'Bacon Wrapped Meatloaf')
        config.set('section_c', 'c68', 'Meatloaf')
        config.set('section_c', 'c69', 'Pumpkin Ravioli')
        config.set('section_c', 'c70', 'Macaroni and Cheese with Bacon and Peas')
        config.set('section_c', 'c71', 'Oven BBQ Chicken')
        config.set('section_c', 'c72', 'Lemon Basil Shrim Risotto')
        config.set('section_c', 'c73', 'Cobb Salad with Homemade Blue Cheese Dressing')
        config.set('section_c', 'c74', 'Peach-Whiskey Barbecue Chicken')
        config.set('section_c', 'c75', 'Baked Spaghetti')
        config.set('section_c', 'c76', 'Parmesan Crusted Tilapia')
        config.set('section_c', 'c77', 'Swedish Meatballs')
        config.set('section_c', 'c78', 'White Chicken Chili')
        config.set('section_c', 'c79', 'Penne with Vodka Sauce and Mini Meatballs')
        config.set('section_c', 'c80', 'Enchiladas')
        config.set('section_c', 'c81', 'Beer Can Chicken')
        config.set('section_c', 'c82', 'Shredded Steak mixed with Instant Mashed potatoes')
        config.set('section_c', 'c83', 'Loaded French Fries')
        config.set('section_c', 'c84', 'Meatloaf with a bed of hashbrowns and eggs on top')
        config.set('section_c', 'c85', 'Pancakes')
        config.set('section_c', 'c86', 'Beef Stew')
        config.set('section_c', 'c87', 'Clam Chowder')
        config.set('section_c', 'c88', 'Bacon and Eggs for Dinner!')
        config.set('section_c', 'c89', 'Oven-baked French Bread Pizzas')
        config.set('section_c', 'c90', 'Easy Butter Chicken')
        config.set('section_c', 'c91', 'Bacon and Egg Ramen Noodles')
        config.set('section_c', 'c92', 'Jumbalaya')
        config.set('section_c', 'c93', 'Garlic Salmon and Asparagus')
        config.set('section_c', 'c94', 'Tuba and Avacado Wrap')
        config.set('section_c', 'c95', 'Teriyaki Chicken and Veggie Foil Packs')
        config.set('section_c', 'c96', 'Stuffed Peppers')
        config.set('section_c', 'c97', '15 Minute Lo Mein')
        config.set('section_c', 'c98', 'Tuna Mornay Rice Bake')
        config.set('section_c', 'c99', 'Chicken and Rice')
        config.set('section_c', 'c100', 'One Tray Haloumi and Chickpea Bake')
        with open(con, 'w') as configfile:
            config.write(configfile)
        print(os.getcwd())
        start()



def start():
     #this determines where you head next
    print("Welcome to Paul's Easy Meal Chooser! What sounds good today?")
    print("Press 1 for fast food, press 2 for sit-down restaraunts, press 3 for home cooked meals, and press 4 for random!")
    choice=input()
    if choice=='1':
        fastfood()
    elif choice=='2':
        sitdown()
    elif choice=='3':
        homecook()
    elif choice=='4':
        randomizechoice()

def randomizechoice():
     #this randomizes the choice from start()
    choice=r.randint(0,5)
    if choice==1:
        fastfood()
    elif choice==2:
        sitdown()
    elif choice==3:
        homecook()
    else:
        randomizechoice()
        
def fastfood():
    #this selects a fast food restaraunt and outputs the result
    config = configparser.RawConfigParser()
    config.optionxform = str
    cona = '\config.ini'
    con=(os.getcwd() + cona)
    with open(con, 'r') as f:
        config.read(con)
    rand=r.randint(0,30)
    ff=("a"+str(rand))
    choice = config.get(f'section_a', ff)
    print('You have chosen:')
    print(choice)
    retry=input('Try again? y/n')
    if retry=='y':
        fastfood()
    elif retry=='n':
        googleplace(choice)
    else:
        print('input not recognized.')
        quit()
        
def googleplace(choice):
    #do google stuff here
    search= (f'{choice} restaraunt')
    webbrowser.open(f'https://www.google.com/search?q={search}')
    print(f"You're Welcome! Enjoy {search}")
    quit()

def googlerecipe(choice):
    #do google stuff here
    search= (f'{choice} recipe')
    webbrowser.open(f'https://www.google.com/search?q={search}')
    print(f"You're Welcome! Enjoy {choice}")
    quit()
    

def sitdown():
    #this selects a 'sit down' restarant, outputs the choice, and then googles it.
    config = configparser.RawConfigParser()
    config.optionxform = str
    cona = '\config.ini'
    con=(os.getcwd() + cona)
    with open(con, 'r') as f:
        config.read(con)
    rand=r.randint(0,61)
    ff=("b"+str(rand))
    choice = config.get(f'section_b', ff)
    print('You have chosen:')
    print(choice)
    retry=input('Try again? y/n')
    if retry=='y':
        sitdown()
    elif retry=='n':
        googleplace(choice)
    else:
        print('input not recognized.')
        quit()

def homecook():
    #this selects a meal title and then googles it for you.
    config = configparser.RawConfigParser()
    config.optionxform = str
    cona = '\config.ini'
    con=(os.getcwd() + cona)
    with open(con, 'r') as f:
        config.read(con)
    rand=r.randint(0,100)
    ff=("c"+str(rand))
    choice = config.get(f'section_c', ff)
    print('You have chosen:')
    print(choice)
    retry=input('Try again? y/n')
    if retry=='y':
        homecook()
    elif retry=='n':
        googlerecipe(choice)
    else:
        print('input not recognized.')
        quit()
              


makeconfig()
